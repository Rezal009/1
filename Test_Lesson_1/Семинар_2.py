# Задача 10: На столе лежат n монеток. Некоторые из них лежат вверх
# решкой, а некоторые – гербом. Определите минимальное число
# монеток, которые нужно перевернуть, чтобы все монетки были
# повернуты вверх одной и той же стороной. Выведите минимальное
# количество монет, которые нужно перевернуть.

# count_mon = int(input('Введите количество монет: '))

# while count_mon <= 0:
#     print('Не издевайся! Введи, пожалуйста, количество монеток больше нуля!')
#     count_mon = int(input('Введите количество монет: '))

# count_side_0 = 0
# count_side_1 = 0

# for _ in range(count_mon):
#     side_monet = int(input('Введите сторону монеты, используя 0 (орёл) или 1 (решка): '))
    
#     while side_monet != 0 and side_monet != 1:
#         print('Введите 0 или 1, так преподователь сказал')
#         side_monet = int(input('Введите сторону монеты, используя 0 (орёл) или 1 (решка): '))
    
#     if side_monet == 0:
#         count_side_0 += 1
#     else:
#         count_side_1 += 1

# if count_side_0 == 0 or count_side_1 == 0:
#     print('Всё и так на нужном месте=)')
# else:
#     print(f'Переверните {"орёл" if count_side_0 > count_side_1 else "решку"} в кол-ве {abs(count_side_0 - count_side_1)}.')



# Задача 12: Петя и Катя – брат и сестра. Петя – студент, а Катя –
# школьница. Петя помогает Кате по математике. Он задумывает два
# натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать. Для
# этого Петя делает две подсказки. Он называет сумму этих чисел S и их
# произведение P. Помогите Кате отгадать задуманные Петей числа.

# def find_numbers(S, P):
#     for X in range(1, 1001):
#         for Y in range(1, 1001):
#             if X + Y == S and X * Y == P:
#                 return X, Y

# # Пример
# S = int(input("Введите сумму чисел: "))
# P = int(input("Введите произведение чисел: "))

# result = find_numbers(S, P)

# if result is not None:
#     print(f"Задуманные числа: {result[0]} и {result[1]}")
# else:
#     print("Невозможно найти числа X и Y, удовлетворяющие условиям задачи.")



# Задача 14: Требуется вывести все целые степени двойки (т.е. числа
# вида 2k
# ), не превосходящие числа N.

# def powers_of_two(N):
#     power = 1
#     result = []
    
#     while power <= N:
#         result.append(power)
#         power *= 2
    
#     return result

# # Пример
# N = int(input("Введите число N: "))
# result = powers_of_two(N)
# print("Целые степени двойки, не превосходящие N:", result)
# 5
